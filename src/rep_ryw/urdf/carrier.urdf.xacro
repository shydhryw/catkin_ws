<?xml version="1.0"?>
<robot xmlns:xacro="http://ros.org/wiki/xacro" name="r3d4">

  <!-- 车体宽度-->
  <xacro:property name="basewidth" value="1.2" />
  <!-- 车体长度-->
  <xacro:property name="baselen" value="1.4" />
  <!-- 车体高度-->
  <xacro:property name="basehight" value="1.2" />
  <!-- 前车轮直径-->
  <xacro:property name="wheeldiam" value="0.25" />
  <!-- 驱动轮直径-->
  <xacro:property name="wheeldiam" value="0.15" />
  <xacro:property name="pi" value="3.1415" />

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <material name="white">
    <color rgba="1 1 1 1"/>
  </material>

  <xacro:macro name="default_inertial" params="mass">
    <inertial>
      <mass value="${mass}" />
      <inertia ixx="1.0" ixy="0.0" ixz="0.0" iyy="1.0" iyz="0.0" izz="1.0" />
    </inertial>
  </xacro:macro>

  <link name="base_link">
    <inertial>
      <origin xyz="5.0405E-06 0.52444 0.3767" rpy="0 0 0" />
      <mass value="308.43" />
      <inertia ixx="26.618208369011" ixy="-0.000487476283401316" ixz="-0.000523003330073589" iyy="27.4789997792547" iyz="-2.68450909552608" izz="22.372352153342" />
    </inertial>
    <visual>
      <origin xyz="0 0 0" rpy="1.5707963267949 0 0" />
      <geometry>
        <mesh filename="package://r3d4/meshes/AGV_base.STL" />
      </geometry>
      <material name="">
        <color rgba="0 0.71765 0.0078431 1" />
      </material>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="1.5707963267949 0 0" />
      <geometry>
        <mesh filename="package://r3d4/meshes/AGV_base.STL" />
      </geometry>
    </collision>
  </link>

  <link name="caster_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <cylinder radius="${wheeldiam/2}" length="0.05"/>
      </geometry>
      <material name="black"/>
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <geometry>
        <cylinder radius="${wheeldiam/2}" length="0.1"/>
      </geometry>
    </collision>
    <xacro:default_inertial mass="1"/>
  </link>

  <joint name="caster_wheel_joint" type="fixed">
    <axis xyz="0 1 0" rpy="0 0 0" />
    <parent link="base_link"/>
    <child link="caster_wheel"/>
    <origin xyz="${baselen*1/3} 0 -${wheeldiam/2+.05}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="caster_wheel">
    <mu1 value="0.0"/>
    <mu2 value="0.0"/>
    <material>Gazebo/Grey</material>
  </gazebo>

  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>/r3d4</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>

  <xacro:macro name="wheel" params="prefix suffix reflect mirror">
    <link name="${prefix}_${suffix}_wheel">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheeldiam/2}" length="0.05"/>
        </geometry>
        <material name="black"/>
      </visual>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
        <geometry>
          <cylinder radius="${wheeldiam/2}" length="0.1"/>
        </geometry>
      </collision>
      <xacro:default_inertial mass="1"/>
    </link>

    <joint name="${prefix}_${suffix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_${suffix}_wheel"/>
      <origin xyz="${baselen*reflect/3} 
                   ${basewidth*mirror/2} -${wheeldiam/2+.05}" rpy="0 0 0"/>
      <dynamics damping="0.7"/>
    </joint>

    <transmission name="${prefix}_${suffix}_tran">
      <type>transmission_interface/SimpleTransmission</type>
      <joint name="${prefix}_${suffix}_wheel_joint">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
      </joint>
      <actuator name="${prefix}_${suffix}_motor">
        <hardwareInterface>hardware_interface/VelocityJointInterface</hardwareInterface>
        <mechanicalReduction>1</mechanicalReduction>
      </actuator>
    </transmission>

    <gazebo reference="${prefix}_${suffix}_wheel">
      <mu1 value="20.0"/>
      <mu2 value="10.0"/>
      <!--kp value="100.0" />
      <kd value="1.0" />
      <material>Gazebo/Grey</material-->
    </gazebo>
  </xacro:macro>
  <xacro:wheel prefix="right" suffix="back" reflect="-1" mirror="-1"/>
  <xacro:wheel prefix="left" suffix="back" reflect="-1" mirror="1"/>

  <!-- Differential drive controller  -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <rosDebugLevel>Debug</rosDebugLevel>
      <publishWheelTF>false</publishWheelTF>
      <robotNamespace></robotNamespace>
      <publishTf>1</publishTf>
      <publishWheelJointState>false</publishWheelJointState>
      <alwaysOn>true</alwaysOn>
      <updateRate>50.0</updateRate>
      <leftJoint>left_back_wheel_joint</leftJoint>
      <rightJoint>right_back_wheel_joint</rightJoint>
      <wheelSeparation>${basewidth}</wheelSeparation>
      <wheelDiameter>${wheeldiam}</wheelDiameter>
      <broadcastTF>1</broadcastTF>
      <wheelTorque>30</wheelTorque>
      <wheelAcceleration>1.8</wheelAcceleration>
      <commandTopic>/cmd_vel</commandTopic>
      <odometryFrame>/odom</odometryFrame>
      <odometryTopic>/odom</odometryTopic>
      <robotBaseFrame>/base_link</robotBaseFrame>
    </plugin>
  </gazebo>

  <!-- Hokuyo Laser -->
  <link name="hokuyo_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>

    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://rep_ryw/meshes/hokuyo.dae"/>
      </geometry>
    </visual>

    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="hokuyo_joint" type="fixed">
    <axis xyz="0 1 0" />
    <origin xyz="0 0 ${basehight/2}" rpy="0 0 0"/>
    <parent link="base_link"/>
    <child link="hokuyo_link"/>
  </joint>

  <!-- hokuyo -->
  <gazebo reference="hokuyo_link">
    <sensor type="gpu_ray" name="head_hokuyo_sensor">
      <pose>0 0 0 0 0 0</pose>
      <visualize>false</visualize>
      <update_rate>40</update_rate>
      <ray>
        <scan>
          <horizontal>
            <samples>720</samples>
            <resolution>1</resolution>
            <min_angle>-1.570796</min_angle>
            <max_angle>1.570796</max_angle>
          </horizontal>
        </scan>
        <range>
          <min>0.10</min>
          <max>30.0</max>
          <resolution>0.01</resolution>
        </range>
        <noise>
          <type>gaussian</type>
          <!-- Noise parameters based on published spec for Hokuyo laser
               achieving "+-30mm" accuracy at range < 10m.  A mean of 0.0m and
               stddev of 0.01m will put 99.7% of samples 
               within 0.03m of the true
               reading. -->
          <mean>0.0</mean>
          <stddev>0.01</stddev>
        </noise>
      </ray>
      <plugin name="gazebo_ros_head_hokuyo_controller" filename="libgazebo_ros_gpu_laser.so">
        <topicName>/r3d4/laser/scan</topicName>
        <frameName>/hokuyo_link</frameName>
      </plugin>
    </sensor>
  </gazebo>

</robot>